     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit,fopen,printf,scanf,fread,fclose,fprintf,gets          
     5                                  import exit msvcrt.dll   
     6                                  import fopen msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import gets msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 785678563461341278-         s1 dq 0x1234613456785678,0x9234123456785678,0x1234123410785678,0x1234613498769876
    15 00000009 567856341234927856-
    15 00000012 781034123412769876-
    15 0000001B 9834613412         
    16                                      len equ ($-s1)/8
    17 00000020 00000000<rept>              s2 times 100 dd 0
    18 000001B0 256400                      number_format db "%d",0
    19                                      
    20                                      
    21                                  
    22                                  segment code use32 class=code
    23                                  
    24                                      vocale:
    25 00000000 8B742404                        mov esi,[esp+4]
    26 00000004 B900000000                      mov ecx,0
    27                                          ;in ecx we save the number of doublewords with the prop that the high byte of the low word is the ascii for a vowel
    28                                          check_double:
    29 00000009 AD                                  lodsd ; we need to check ah
    30                                              
    31 0000000A 83F800                              cmp eax,0
    32 0000000D 741E                                je final
    33                                              
    34 0000000F 80FC61                              cmp ah,"a"
    35 00000012 7416                                je vocala
    36 00000014 80FC65                              cmp ah,"e"
    37 00000017 7411                                je vocala
    38 00000019 80FC69                              cmp ah,"i"
    39 0000001C 740C                                je vocala
    40 0000001E 80FC6F                              cmp ah,"o"
    41 00000021 7407                                je vocala
    42 00000023 80FC75                              cmp ah,"u"
    43 00000026 7402                                je vocala
    44 00000028 EBDF                                jmp check_double
    45                                              
    46                                              vocala:
    47 0000002A 41                                  inc ecx
    48 0000002B EBDC                                jmp check_double
    49                                              
    50                                      
    51                                      final:
    52 0000002D C3                          ret
    53                                      
    54                                      
    55                                      start:
    56 0000002E BE[00000000]                    mov esi,s1
    57 00000033 BF00000000                      mov edi,0
    58 00000038 B904000000                      mov ecx, len
    59                                          formeaza_s2:
    60 0000003D AD                                  lodsd ; eax low word 
    61                                              
    62 0000003E 89C3                                mov ebx, eax ; ebx = eax
    63                                              
    64 00000040 AD                                  lodsd ; eax =  high word
    65                                              
    66 00000041 39D8                                cmp eax,ebx
    67 00000043 7F02                                jg este_mai_mare
    68 00000045 EB09                                jmp continue_loop
    69                                              
    70                                              este_mai_mare:
    71 00000047 8987[20000000]                      mov dword [s2+edi],eax
    72 0000004D 83C704                              add edi,4
    73                                              
    74                                              continue_loop:
    75 00000050 E2EB                            loop formeaza_s2
    76                                          
    77 00000052 68[20000000]                    push dword s2
    78 00000057 E8A4FFFFFF                      call vocale
    79                                          
    80                                          
    81 0000005C 51                              push dword ecx
    82 0000005D 68[B0010000]                    push dword number_format
    83 00000062 FF15[00000000]                  call [printf]
    84 00000068 83C408                          add esp, 4*2
    85                                          
    86                                              
    87                                      
    88                                      
    89 0000006B 6A00                            push    dword 0      
    90 0000006D FF15[00000000]                  call    [exit]       
