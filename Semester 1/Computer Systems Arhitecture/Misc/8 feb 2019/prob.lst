     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit,fopen,printf,scanf,fread,fclose,fprintf,gets          
     5                                  import exit msvcrt.dll   
     6                                  import fopen msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import gets msvcrt.dll
    13                                  
    14                                  segment data use32 class=data
    15 00000000 78A63412345678122B-         sir dd 1234A678h,12785634h,1A4D3C2Bh
    15 00000009 3C4D1A             
    16                                      len equ ($-sir)/4
    17 0000000C 0000<rept>                  sir_nou times 100 dw 0
    18 000000D4 256400                      num_format db "%d",0
    19                                  
    20                                  segment code use32 class=code
    21                                      start:
    22 00000000 BE[00000000]                    mov esi,sir
    23 00000005 B903000000                      mov ecx, len
    24 0000000A BA00000000                      mov edx,0
    25 0000000F BF00000000                      mov edi,0
    26                                          form:
    27 00000014 66AD                                lodsw ; high word, we need to take ah
    28 00000016 88A7[0C000000]                      mov byte [sir_nou+edi],ah
    29 0000001C 47                                  inc edi
    30                                              
    31 0000001D D0EC                                shr ah,1
    32 0000001F 83D200                              adc edx,0
    33 00000022 D0EC                                shr ah,1
    34 00000024 83D200                              adc edx,0
    35 00000027 D0EC                                shr ah,1
    36 00000029 83D200                              adc edx,0
    37 0000002C D0EC                                shr ah,1
    38 0000002E 83D200                              adc edx,0
    39 00000031 D0EC                                shr ah,1
    40 00000033 83D200                              adc edx,0
    41 00000036 D0EC                                shr ah,1
    42 00000038 83D200                              adc edx,0
    43 0000003B D0EC                                shr ah,1
    44 0000003D 83D200                              adc edx,0
    45 00000040 D0EC                                shr ah,1
    46 00000042 83D200                              adc edx,0
    47                                              
    48 00000045 66AD                                lodsw ;  low word, we need to take ah as well
    49 00000047 88A7[0C000000]                      mov byte [sir_nou+edi],ah
    50 0000004D 47                                  inc edi
    51                                              
    52 0000004E D0EC                                shr ah,1
    53 00000050 83D200                              adc edx,0
    54 00000053 D0EC                                shr ah,1
    55 00000055 83D200                              adc edx,0
    56 00000058 D0EC                                shr ah,1
    57 0000005A 83D200                              adc edx,0
    58 0000005D D0EC                                shr ah,1
    59 0000005F 83D200                              adc edx,0
    60 00000062 D0EC                                shr ah,1
    61 00000064 83D200                              adc edx,0
    62 00000067 D0EC                                shr ah,1
    63 00000069 83D200                              adc edx,0
    64 0000006C D0EC                                shr ah,1
    65 0000006E 83D200                              adc edx,0
    66 00000071 D0EC                                shr ah,1
    67 00000073 83D200                              adc edx,0
    68 00000076 E29C                            loop form
    69                                              
    70 00000078 52                              push dword edx
    71 00000079 68[D4000000]                    push dword num_format
    72 0000007E FF15[00000000]                  call [printf]
    73 00000084 83C408                          add esp, 4*2
    74                                       
    75 00000087 6A00                            push    dword 0      
    76 00000089 FF15[00000000]                  call    [exit]       
